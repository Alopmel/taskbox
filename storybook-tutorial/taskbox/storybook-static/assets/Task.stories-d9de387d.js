import{r as N}from"./index-76fb7be0.js";import{P as i}from"./index-8d47fad6.js";var S={exports:{}},l={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var O=N,j=Symbol.for("react.element"),P=Symbol.for("react.fragment"),I=Object.prototype.hasOwnProperty,q=O.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,C={key:!0,ref:!0,__self:!0,__source:!0};function R(e,s,o){var r,n={},u=null,k=null;o!==void 0&&(u=""+o),s.key!==void 0&&(u=""+s.key),s.ref!==void 0&&(k=s.ref);for(r in s)I.call(s,r)&&!C.hasOwnProperty(r)&&(n[r]=s[r]);if(e&&e.defaultProps)for(r in s=e.defaultProps,s)n[r]===void 0&&(n[r]=s[r]);return{$$typeof:j,type:e,key:u,ref:k,props:n,_owner:q.current}}l.Fragment=P;l.jsx=R;l.jsxs=R;S.exports=l;var A=S.exports;const a=A.jsx,f=A.jsxs;function d({task:{id:e,title:s,state:o},onArchiveTask:r,onPinTask:n}){return f("div",{className:`list-item ${o}`,children:[f("label",{htmlFor:"checked","aria-label":`archiveTask-${e}`,className:"checkbox",children:[a("input",{type:"checkbox",disabled:!0,name:"checked",id:`archiveTask-${e}`,checked:o==="TASK_ARCHIVED"}),a("span",{className:"checkbox-custom",onClick:()=>r(e)})]}),a("label",{htmlFor:"title","aria-label":s,className:"title",children:a("input",{type:"text",value:s,readOnly:!0,name:"title",placeholder:"Input title"})}),o!=="TASK_ARCHIVED"&&a("button",{className:"pin-button",onClick:()=>n(e),id:`pinTask-${e}`,"aria-label":`pinTask-${e}`,children:a("span",{className:"icon-star"})},`pinTask-${e}`)]})}d.propTypes={task:i.shape({id:i.string.isRequired,title:i.string.isRequired,state:i.string.isRequired}),onArchiveTask:i.func,onPinTask:i.func};d.__docgenInfo={description:"",methods:[],displayName:"Task",props:{task:{description:"Composition of the task",type:{name:"shape",value:{id:{name:"string",description:"Id of the task",required:!0},title:{name:"string",description:"Title of the task",required:!0},state:{name:"string",description:"Current state of the task",required:!0}}},required:!1},onArchiveTask:{description:"Event to change the task to archived",type:{name:"func"},required:!1},onPinTask:{description:"Event to change the task to pinned",type:{name:"func"},required:!1}}};const D={component:d,title:"Task"},m=e=>a(d,{...e}),t=m.bind({});t.args={task:{id:"1",title:"Test Task",state:"TASK_INBOX"}};const c=m.bind({});c.args={task:{...t.args.task,state:"TASK_PINNED"}};const p=m.bind({});p.args={task:{...t.args.task,state:"TASK_ARCHIVED"}};var h,T,_;t.parameters={...t.parameters,docs:{...(h=t.parameters)==null?void 0:h.docs,source:{originalSource:"args => <Task {...args} />",...(_=(T=t.parameters)==null?void 0:T.docs)==null?void 0:_.source}}};var g,b,v;c.parameters={...c.parameters,docs:{...(g=c.parameters)==null?void 0:g.docs,source:{originalSource:"args => <Task {...args} />",...(v=(b=c.parameters)==null?void 0:b.docs)==null?void 0:v.source}}};var y,x,E;p.parameters={...p.parameters,docs:{...(y=p.parameters)==null?void 0:y.docs,source:{originalSource:"args => <Task {...args} />",...(E=(x=p.parameters)==null?void 0:x.docs)==null?void 0:E.source}}};const $=["Default","Pinned","Archived"],F=Object.freeze(Object.defineProperty({__proto__:null,Archived:p,Default:t,Pinned:c,__namedExportsOrder:$,default:D},Symbol.toStringTag,{value:"Module"}));export{t as D,d as T,f as a,F as b,a as j};
